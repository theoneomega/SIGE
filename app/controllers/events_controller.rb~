class EventsController < ApplicationController
  before_filter :authenticate_user!
  load_and_authorize_resource
  
  
  
  # GET /events
  # GET /events.json
  def index
    #    @search = Event.ransack(params[:q])
    if current_user.role.super_admin==true || current_user.role.supervisor==true
      @events=Event.order('priority_id').all
    else
      @events = Event.where("(analyst_id = #{current_user.analyst_id})").order('priority_id ASC')
    end
    respond_to do |format|
      format.html # index.html.erb
      format.json { render json: @events }
      
    end
  end

  # GET /events/1
  # GET /events/1.json
  def show
    @event = Event.find(params[:id])

    respond_to do |format|
      format.html # show.html.erb
      format.json { render json: @event }
    end
  end

  # GET /events/new
  # GET /events/new.json
  def new
    @event = Event.new
    #@events_collection = EventsCollection.new
    respond_to do |format|
      format.html # new.html.erb
      format.json { render json: @event }
    end
  end

  # GET /events/1/edit
  def edit
    @event = Event.find(params[:id])
  end

  # POST /events
  # POST /events.json
  def create
   

#@person.first_name = @person.first_name.upcase
#	@person.last_name1 = @person.last_name1.upcase
#	@person.last_name2 = @person.last_name2.upcase
#	@person.first_name = @person.first_name.upcase
#@person.originative = @person.originative.upcase
#@person.first_name = @person.first_name.upcase
#    @person.observations = @person.observations.upcase


    @event = Event.new(params[:event])
    @event.description = @event.description.upcase
@event.person.observations=@event.person.observations.upcase
@event.person.first_name=@event.person.first_name.upcase
@event.person.last_name1=@event.person.last_name1.upcase
@event.person.last_name2=@event.person.last_name2.upcase
    respond_to do |format|
      if @event.save
        UserMailer.event_registration(@event).deliver 
        format.html { redirect_to @event, notice: 'Event was successfully created.' }
        format.json { render json: @event, status: :created, location: @event }
      else
        format.html { render action: "new" }
        format.json { render json: @event.errors, status: :unprocessable_entity }
      end
    end
  end

  # PUT /events/1
  # PUT /events/1.json
  def update
    @event = Event.find(params[:id])

    respond_to do |format|
      if @event.update_attributes(params[:event])
        format.html { redirect_to @event, notice: 'Event was successfully updated.' }
        format.json { head :no_content }
      else
        format.html { render action: "edit" }
        format.json { render json: @event.errors, status: :unprocessable_entity }
      end
    end
  end

  # DELETE /events/1
  # DELETE /events/1.json
  def destroy
    @event = Event.find(params[:id])
    @event.destroy

    respond_to do |format|
      format.html { redirect_to events_url }
      format.json { head :no_content }
    end
  end
end
